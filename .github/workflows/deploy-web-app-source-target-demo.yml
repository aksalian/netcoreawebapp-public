name: Source-Target Web Application Deployment using Secrets to Azure Web App

on:
   # push:
   #   branches:
   #     - "main"
   workflow_dispatch:
    inputs:
        source_env:
          description: Source Env.
          type: choice
          options:
            - develop
            - integration
            - prod
          required: true
          default: develop
        dest_env:
          description: Destination Env.
          type: choice
          options:
            - develop
            - integration
            - prod
          required: true
          default: integration

env:
  DOTNET_VERSION: "6.0.x"
  AZURE_WEBAPP_PACKAGE_PATH: '.'      # set this to the path to your web app project, defaults to the repository root
  env-name: "-na-"

defaults:
  run:
    working-directory: ./webapplication01

jobs:
  build:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up .Net Core
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: Install Dependencies
        run: dotnet restore

      - name: Build Project
        run: dotnet build --configuration Release

      - name: Publish Project
        run: dotnet publish -c Release -o ${{ env.DOTNET_ROOT }}/webapp

      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        with:
          name: .net-application
          path: ${{ env.DOTNET_ROOT }}/webapp

  source_env:
      name: Fetch vars from source - ${{ github.event.inputs.source_env }} environment
      permissions:
        contents: none
      runs-on: windows-latest
      outputs:
        o_source_displayenv: ${{ steps.s_env.outputs.source_displayenv }}
        o_source_webapp: ${{ steps.s_env.outputs.source_webapp_name }}
        o_source_webapp_pp: ${{ steps.s_env.outputs.source_webapp_pp }}
        o_source_webapp_secret: ${{ steps.s_env.outputs.source_webapp_secret }}
      needs: build
      #if: contains(fromJSON('["develop", "integration", "main"]'), github.ref_name) 
      environment:
        name: ${{ github.event.inputs.source_env }}
  
      steps:
        - name: Set the source env. values
          id: s_env
          shell: bash
          run: |
            # create step level variables [source_] and assign values from the env. variables based on the environment selected in source dropdown
            echo "source_displayenv = ${{ vars.DISPLAYENV }}"  >> $GITHUB_OUTPUT
            echo "source_webapp_name = ${{ vars.AZURE_WEBAPP_NAME }}"  >> $GITHUB_OUTPUT
            echo "source_webapp_pp = ${{ vars.o_source_webapp_pp }}"  >> $GITHUB_OUTPUT
            echo "source_webapp_secret= ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}"  >> $GITHUB_OUTPUT
  
            # to validate if the correct vars are getting fetched from the env. vars based on the environment selected
            # echo Source Environment (from Source Job) : ${{ vars.DISPLAYENV }}
            # echo Source Web App Name (from Source Job) : ${{ vars.AZURE_WEBAPP_NAME }}
  
        # this is technically not necessary, but it's useful for debugging
        - name: Print variables to console
          run: |
            echo Source Environment from outputs: ${{ steps.s_env.outputs.o_source_displayenv }}
            echo Source Web App from outputs: ${{ steps.s_env.outputs.o_source_webapp }}

  target_env:
    name: Deploy to target destination - ${{ github.event.inputs.dest_env }} environment using the above source & dest values
    permissions:
      contents: none
    runs-on: windows-latest
    needs: source_env
    #if: contains(fromJSON('["develop", "integration", "main"]'), github.ref_name) 
    environment:
      name: ${{ github.event.inputs.dest_env }}
      #url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    env:
      SOURCE_DISPLAYENV : ${{ needs.source_env.outputs.o_source_displayenv }}
      SOURCE_WEBAPP : ${{ needs.source_env.outputs.o_source_webapp }}
      SOURCE_WEBAPP_PP : ${{ needs.source_env.outputs.o_source_webapp_pp }}
      SOURCE_WEBAPP_SECRET : ${{ needs.source_env.outputs.o_source_webapp_secret }}
      APPSETTINGS_PATH: appsettings.json

    steps:
      # this step is technically not necessary, but it's useful for debugging
      - name: Print variables to console
        run: |
          echo Source Environment (from Target Job) : ${{ needs.source_env.outputs.o_source_displayenv }} # ${{ env.SOURCE_DISPLAYENV }}
          echo Source Web App (from Target Job) : ${{ needs.source_env.outputs.o_source_webapp }} # ${{ env.SOURCE_WEBAPP }}

      - name: Download artifact from build job
        uses: actions/download-artifact@v3
        with:
          name: .net-application
  
      # - name: Replace values in source properties file
      #   uses: bluwy/substitute-string-action@v2
      #   with:
      #     _input-file: ${{ env.APPSETTINGS_PATH }}
      #     _output-file: ${{ env.APPSETTINGS_PATH }}
      #     _format-key: '%%key%%'
      #     fillmeinenv: ${{ vars.DISPLAYENV }}
      #     fillmeinsourceenv: ${{ env.SOURCE_DISPLAYENV }}
      #     fillmeintargetenv: ${{ vars.DISPLAYENV }}
          
      # - name: Deploy to Source Azure Web App
      #   id: deploy-to-sourcewebapp
      #   uses: azure/webapps-deploy@v2
      #   with:
      #     app-name: ${{ env.SOURCE_WEBAPP }}
      #     publish-profile: ${{ env. }}
      #     package: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}

      - name: Replace values in target properties file
        uses: bluwy/substitute-string-action@v2
        with:
          _input-file: ${{ env.APPSETTINGS_PATH }}
          _output-file: ${{ env.APPSETTINGS_PATH }}
          _format-key: '%%key%%'
          fillmeinenv: ${{ vars.DISPLAYENV }}
          fillmeinsourceenv: ${{ env.SOURCE_DISPLAYENV }}
          fillmeintargetenv: ${{ vars.DISPLAYENV }}
            
      - name: Deploy to Target Azure Web App
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ vars.AZURE_WEBAPP_NAME }}
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
          package: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}
